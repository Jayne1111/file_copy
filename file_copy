# import os
# import multiprocessing

# def copy_file(file_name,source_dir,dest_dir):
    
#     # 1.拼接源文件路径和目标文件路径
#     source_path = source_dir + "/" + file_name

#     dest_path = dest_dir + "/" + file_name

#     # print(source_path,"---->",dest_path)

#     # 2.打开源文件和目标文件
#     with open(source_path,"rb") as source_file:
#         with open(dest_path,"wb") as dest_file:
#             # 循环读取源文件的内容并且写入到目标文件中
#             while True:
#                 # 循环读取源文件的内容
#                 file_data = source_file.read(1024)
#                 if file_data:
#                     # 循环写入到目标文件
#                     dest_file.write(file_data)
#                 else:
#                     break


# if __name__ == "__main__":

#     # 1.定义源文件目录和目标文件夹的目录
#     source_dir = r"E:\picture"
#     dest_dir = r"C:\Users\Administrator\Desktop\picture"

#     # 2.创建目标文件夹
#     try:
#         # 创建目标文件夹目录
#         os.mkdir(dest_dir)
#     except:
#         print("目标文件夹已经存在，无需创建...")

#     # 3.通过 os.listdir 获取源目录长得文件列表
#     file_list = os.listdir(source_dir)
#     print(file_list)

#     # 4.遍历源文件中的每个文件
#     for file_name in file_list:
#         # copy_work(file_name,source_dir,dest_dir)  # 单任务拷贝

#         # 5.采用进程实现多任务，实现高并发拷贝
#         sub_process = multiprocessing.Process(target=copy_file,
#                                               args=(file_name,source_dir,dest_dir))  # 多任务拷贝
#         sub_process.start()
